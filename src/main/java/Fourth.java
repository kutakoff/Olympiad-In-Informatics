import java.util.Scanner;

public class Fourth {

    /*
        Гостиница для жирафов
    В гостинице для жирафов администрация хочет запастись подушкам так, чтобы удовлетворить потребности
    любого своего возможного постояльца. Известно, что жирафам в зависимости от длины их шеи нужно сложить
     стопку подушек (в стопке одна или несколько подушек) толщиной от 1 до n сантиметров. При этом
     администрация хочет обойтись как можно меньшим числом подушек, а среди наборов подушек
     ,удовлетворяющих этим требованиям, администрация выберет набор минимальной суммарной толщины
     ,чтобы он занимал минимальный объём в шкафу.
     Помогите администрации составить нужный набор подушек, позволяющий получить стопку любой высоты
     от 1 до n сантиметров включительно.

        Входные данные
    Во входных данных записано единственное целое число n — максимально возможная длина шеи жирафа (1 ≤ n ≤ 109).

        Выходные данные
    В единственной строке через пробел выведите толщину каждой подушки в этом наборе в произвольном порядке. Если ответов несколько, выведите любой из них.

        Замечание
     В примере из условия необходимо подобрать такой набор из минимального числа подушек, чтобы используя
     данные подушки удавалось сложить стопку любой целочисленной толщины от 1 до 9 см.
     Таким набором является набор из подушек толщиной 1, 2, 3, 3 см. Действительно, стопку толщины 1, 2, 3 см
     можно сложить из одной подушки. Оставшиеся числа получены так: 4 = 1 + 3, 5 = 2 + 3, 6 = 3 + 3,
     7 = 1 + 3 + 3, 8 = 2 + 3 + 3, 9 = 1 + 2 + 3 + 3. Возможны и другие варианты ответа с тем же количеством
     подушек и их суммарной толщиной. Выполнить условие задачи, используя только три подушки, нельзя.
     */

    /**
     * сделано
     */
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int userIn = scanner.nextInt();
        if (userIn == 1) {
            System.out.println(1);
        } else {
            for (int i = 1; i * 2 < userIn; i *= 2) {
                System.out.println(i);
                if (i * 4 >= userIn) {
                    System.out.println(userIn - i * 2 + 1);
                    break;
                }
            }
        }
    }
}